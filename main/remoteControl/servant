local function open()
	local bOpen, sFreeSide = false, nil
	for n,sSide in pairs(rs.getSides()) do	
		if peripheral.getType( sSide ) == "modem" then
			sFreeSide = sSide
			if rednet.isOpen( sSide ) then
				bOpen = true
				break
			end
		end
	end
	
	if not bOpen then
		if sFreeSide then
			print( "No modem active. Opening "..sFreeSide.." modem" )
			rednet.open( sFreeSide )
			sOpenedSide = sFreeSide
			return true
		else
			print( "No modem attached" )
			return false
		end
	end
	return true
end

if not open() then
	return
end

local tEvents = {}

local function onExit()
	for i, n in ipairs(tEvents) do
		os.queueEvent(unpack(n, 1))
	end
end

local sCName = read()
local nID = rednet.lookup("remoteControl", sCName)
if not nID then
	print("Can't find host")
	onExit()
	return
end
rednet.send(nID, "PADI")
local timer = os.startTimer(5)
local timeLeft = 5
while true do
	local e, p1, p2, p3, p4 = os.pullEvent()
	if e == "rednet_message" and p1 == nID then
		if p2 == "PADO" then
			print("Connection Established")
			break
		else
			onExit()
			return
		end
	elseif e == "timer" and p1 == timer then
		if timeLeft > 0 then
			print("Timed out.Try again.")
			rednet.send(nID, "PADI")
			timer = os.startTimer(5)
			timeLeft = timeLeft - 1
		else
			print("Timed out.")
		end
	else
		table.insert(tEvents, {e, p1, p2, p3, p4})
	end
end

while true do
	local e, p1, p2, p3, p4 = os.pullEventRaw()
	if e == "terminate" then
		break
	elseif e == "rednet_message" and p1 == nID then
		local ok, err = loadstring(p2)
		if ok then
			ok, err = pcall(ok)
			if not ok then
				printError(err)
			end
		end
	else
		table.insert(tEvents, {e, p1, p2, p3, p4})
	end
end

onExit()